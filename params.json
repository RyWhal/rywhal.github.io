{"name":"Rywhal.github.io","tagline":"My blog about my adventures in learning new programming languages","body":"### I needed some encouragement\r\nAn array of encouragements and some math for a random entry will do nicely\r\n\r\nuncompiled encourage.coffee\r\n```coffee\r\nencouragements = [\r\n\t\"You're doing great!\",\r\n\t\"You are the best I've ever seen!\",\r\n\t\"You are the wind beneath my wings\",\r\n\t\"You have no equal\",\r\n\t\"Woooooo!\",\r\n\t\"Keep going!..\",\r\n\t\"You can do it.\",\r\n]\r\n\r\nlength = encouragements.length\r\n\r\nconsole.log encouragements[Math.floor Math.random() * length]\r\n```\r\n\r\noutput:\r\n```sh\r\n~/Projects/coffee ⌚ 23:57:58\r\n$ node encourage.js\r\nKeep going!..\r\n\r\n~/Projects/coffee ⌚ 23:58:01\r\n$ node encourage.js\r\nYou have no equal\r\n\r\n~/Projects/coffee ⌚ 23:58:02\r\n$ node encourage.js\r\nYou can do it.\r\n```\r\n\r\n\r\n***\r\n\r\n### Making a Class \r\nSo everything is pretty plain language created in coffee-script. Creating a class is as easy as \"class ClasName\" and giving it a constructor with some attributes.\r\n\r\nuncompiled info_print.coffee\r\n```coffee\r\nclass Info\r\n\r\n\tconstructor: (@attributes)->\r\n\r\n\tprintInfo: ->\r\n\t\tconsole.log \"Name: #{@attributes.name}\"\r\n\t\tconsole.log \"Title: #{@attributes.title}\"\r\n\t\tconsole.log \"DOB: #{@attributes.dob}\"\r\n\t\tif @attributes.salary\r\n\t\t\tconsole.log \"Salary: #{@attributes.salary}\"\r\n\t\telse\r\n\t\t\tconsole.log \"Salary: Unknown\"\r\n\r\nryan = new Info\r\n\tname: \"Ryan\"\r\n\ttitle: \"Tech\"\r\n\tdob: new Date(1988, 2, 2)\r\n\tsalary: \"$1,000,000\"\r\n\r\nross = new Info\r\n\tname: \"Ross S.\"\r\n\ttitle: \"VP\"\r\n\tdob: new Date(1985, 7, 15)\r\n\r\nryan.printInfo()\r\nconsole.log \" \"\r\nross.printInfo()\r\n```\r\n\r\nafter its compiled and run:\r\n```\r\n$ node info_print.js\r\nName: Ryan\r\nTitle: Tech\r\nDOB: Wed Mar 02 1988 00:00:00 GMT+0000 (UTC)\r\nSalary: $1,000,000\r\n\r\nName: Ross S.\r\nTitle: VP\r\nDOB: Thu Aug 15 1985 00:00:00 GMT+0000 (UTC)\r\nSalary: Unknown\r\n```\r\n\r\n\r\n***\r\n\r\n### Hello World\r\nTurns out a hello world script is pretty easy in coffee script. \r\n\r\n\r\nhello.coffee:\r\n```coffee\r\nhello = \"Hello, World\"\r\nconsole.log hello\r\n```\r\n\r\n\r\ncompiled into js:\r\n```javascript\r\n$ coffee -p hello.coffee\r\n(function() {\r\n  var hello;\r\n\r\n  hello = \"Hello, World\";\r\n\r\n  console.log(hello);\r\n\r\n}).call(this);\r\n```\r\n\r\n\r\nand running it:\r\n```\r\n$ node hello.js\r\nHello, World\r\n```\r\n\r\n## New Adventure: Coffee-script\r\nMy very first programming adventure for this blog is going to be coffee-script. Coffee-script is an easily readable language that compiles its code into JavaScript... I want to use it to write some hubot scripts, but we'll see what happens\r\n\r\nIt starts with one command    o.O\r\n```\r\n$ npm install coffee-script\r\nnpm http GET https://registry.npmjs.org/coffee-script\r\nnpm http 200 https://registry.npmjs.org/coffee-script\r\nnpm http GET https://registry.npmjs.org/coffee-script/-/coffee-script-1.7.1.tgz\r\nnpm http 200 https://registry.npmjs.org/coffee-script/-/coffee-script-1.7.1.tgz\r\nnpm http GET https://registry.npmjs.org/mkdirp\r\nnpm http 200 https://registry.npmjs.org/mkdirp\r\nnpm http GET https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.5.tgz\r\nnpm http 200 https://registry.npmjs.org/mkdirp/-/mkdirp-0.3.5.tgz\r\ncoffee-script@1.7.1 node_modules/coffee-script\r\n└── mkdirp@0.3.5\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}